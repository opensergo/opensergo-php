<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: opensergo/proto/service_contract/v1/service_contract.proto

namespace Opensergo\Proto\Service_contract\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Identifier metadata of the Node.
 *
 * Generated from protobuf message <code>opensergo.proto.service_contract.v1.Node</code>
 */
class Node extends \Google\Protobuf\Internal\Message
{
    /**
     * Identifier that uniquely identifies a process within a VM/container.
     *
     * Generated from protobuf field <code>.opensergo.proto.service_contract.v1.NodeIdentifier identifier = 1;</code>
     */
    protected $identifier = null;
    /**
     * Locality specifying where the instance is running.
     *
     * Generated from protobuf field <code>optional .opensergo.proto.service_contract.v1.Locality locality = 4;</code>
     */
    protected $locality = null;
    /**
     * Generated from protobuf field <code>optional string tag = 5;</code>
     */
    protected $tag = null;
    /**
     * Generated from protobuf field <code>optional string cluster = 6;</code>
     */
    protected $cluster = null;
    /**
     * Generated from protobuf field <code>optional string env = 7;</code>
     */
    protected $env = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Opensergo\Proto\Service_contract\V1\NodeIdentifier $identifier
     *           Identifier that uniquely identifies a process within a VM/container.
     *     @type \Opensergo\Proto\Service_contract\V1\Locality $locality
     *           Locality specifying where the instance is running.
     *     @type string $tag
     *     @type string $cluster
     *     @type string $env
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Opensergo\Proto\ServiceContract\V1\ServiceContract::initOnce();
        parent::__construct($data);
    }

    /**
     * Identifier that uniquely identifies a process within a VM/container.
     *
     * Generated from protobuf field <code>.opensergo.proto.service_contract.v1.NodeIdentifier identifier = 1;</code>
     * @return \Opensergo\Proto\Service_contract\V1\NodeIdentifier|null
     */
    public function getIdentifier()
    {
        return $this->identifier;
    }

    public function hasIdentifier()
    {
        return isset($this->identifier);
    }

    public function clearIdentifier()
    {
        unset($this->identifier);
    }

    /**
     * Identifier that uniquely identifies a process within a VM/container.
     *
     * Generated from protobuf field <code>.opensergo.proto.service_contract.v1.NodeIdentifier identifier = 1;</code>
     * @param \Opensergo\Proto\Service_contract\V1\NodeIdentifier $var
     * @return $this
     */
    public function setIdentifier($var)
    {
        GPBUtil::checkMessage($var, \Opensergo\Proto\Service_contract\V1\NodeIdentifier::class);
        $this->identifier = $var;

        return $this;
    }

    /**
     * Locality specifying where the instance is running.
     *
     * Generated from protobuf field <code>optional .opensergo.proto.service_contract.v1.Locality locality = 4;</code>
     * @return \Opensergo\Proto\Service_contract\V1\Locality|null
     */
    public function getLocality()
    {
        return $this->locality;
    }

    public function hasLocality()
    {
        return isset($this->locality);
    }

    public function clearLocality()
    {
        unset($this->locality);
    }

    /**
     * Locality specifying where the instance is running.
     *
     * Generated from protobuf field <code>optional .opensergo.proto.service_contract.v1.Locality locality = 4;</code>
     * @param \Opensergo\Proto\Service_contract\V1\Locality $var
     * @return $this
     */
    public function setLocality($var)
    {
        GPBUtil::checkMessage($var, \Opensergo\Proto\Service_contract\V1\Locality::class);
        $this->locality = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string tag = 5;</code>
     * @return string
     */
    public function getTag()
    {
        return isset($this->tag) ? $this->tag : '';
    }

    public function hasTag()
    {
        return isset($this->tag);
    }

    public function clearTag()
    {
        unset($this->tag);
    }

    /**
     * Generated from protobuf field <code>optional string tag = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setTag($var)
    {
        GPBUtil::checkString($var, True);
        $this->tag = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string cluster = 6;</code>
     * @return string
     */
    public function getCluster()
    {
        return isset($this->cluster) ? $this->cluster : '';
    }

    public function hasCluster()
    {
        return isset($this->cluster);
    }

    public function clearCluster()
    {
        unset($this->cluster);
    }

    /**
     * Generated from protobuf field <code>optional string cluster = 6;</code>
     * @param string $var
     * @return $this
     */
    public function setCluster($var)
    {
        GPBUtil::checkString($var, True);
        $this->cluster = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>optional string env = 7;</code>
     * @return string
     */
    public function getEnv()
    {
        return isset($this->env) ? $this->env : '';
    }

    public function hasEnv()
    {
        return isset($this->env);
    }

    public function clearEnv()
    {
        unset($this->env);
    }

    /**
     * Generated from protobuf field <code>optional string env = 7;</code>
     * @param string $var
     * @return $this
     */
    public function setEnv($var)
    {
        GPBUtil::checkString($var, True);
        $this->env = $var;

        return $this;
    }

}

